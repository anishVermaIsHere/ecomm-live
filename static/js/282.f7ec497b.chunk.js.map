{"version":3,"file":"static/js/282.f7ec497b.chunk.js","mappings":"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","sources":["features/user/components/checkout/UserCheckoutForm.js","features/user/components/checkout/BillSummary.js","features/user/pages/Checkout.js"],"sourcesContent":["import React,{useState} from 'react';\r\n import { Formik, Form, Field, ErrorMessage } from 'formik';\r\n import 'react-phone-number-input/style.css'\r\nimport '../../../../assets/styles/user/Checkout.css';\r\n\r\n\r\nconst UserCheckoutForm = ({shopForm,states}) => {\r\n    const {delivery,placeholder}=shopForm;\r\n    const formField={\r\n        name: '', \r\n        phone: '', \r\n        house:'', \r\n        area:'', \r\n        city:'', \r\n        state:'', \r\n        pin:''\r\n    }\r\n    const [value, setValue] = useState()\r\n    return (\r\n        <>\r\n            <div className='col-lg-6 border-light customer-checkout-form'>\r\n                <Formik\r\n                    initialValues={formField}\r\n                    validate={values => {\r\n                        const errors = {};\r\n                        // validate name field\r\n                        if (!values.name) {\r\n                        errors.name = 'Required';\r\n                        } else if (\r\n                        !/^[a-zA-Z]+\\s|[a-zA-Z]{2,20}$/ig.test(values.name)\r\n                        ) {\r\n                        errors.name = 'Invalid name';\r\n                        }\r\n                        // validate phone field\r\n                        if (!values.phone) {\r\n                        errors.phone = 'Required';\r\n                        } else if (\r\n                        !/^[6-9]{1}[0-9]{9}$/ig.test(values.phone)\r\n                        ) {\r\n                        errors.phone = 'Invalid phone';\r\n                        }\r\n                        // validate house no. field\r\n                        if (!values.house) {\r\n                        errors.house = 'Required';\r\n                        } else if (\r\n                        !/^[A-Za-z\\-{1}0-9]|\\s*[A-Za-z]{3,20}$/ig.test(values.house)\r\n                        ) {\r\n                        errors.house = 'Invalid house/flat no.';\r\n                        }\r\n                        // validate area field\r\n                        if (!values.area) {\r\n                        errors.area = 'Required';\r\n                        } else if (\r\n                        !/^[A-Za-z\\-{1}0-9]|\\s*[A-Za-z]{3,20}$/ig.test(values.area)\r\n                        ) {\r\n                        errors.area = 'Invalid area';\r\n                        }\r\n                        // validate city field\r\n                        if (!values.city) {\r\n                        errors.city = 'Required';\r\n                        } else if (\r\n                        !/^[A-Za-z]{3,20}|\\s*[A-Za-z]{3,20}$/ig.test(values.city)\r\n                        ) {\r\n                        errors.city = 'Invalid city';\r\n                        }\r\n                         // validate state field\r\n                         if (!values.state) {\r\n                        errors.state = 'Required';\r\n                        }                         \r\n                        else {}\r\n                         // validate pincode field\r\n                         if (!values.pin) {\r\n                        errors.pin = 'Required';\r\n                        } else if (\r\n                        !/^\\d{6,10}$/ig.test(values.pin)\r\n                        ) {\r\n                        errors.pin = 'Invalid pincode';\r\n                        }\r\n                        return errors;\r\n                    }}\r\n                    onSubmit={(values, { setSubmitting }) => {\r\n                        setTimeout(() => {\r\n                        alert(JSON.stringify(values, null, 2));\r\n                        setSubmitting(false);\r\n                        }, 400);\r\n                    }}\r\n                    >\r\n                    {({ isSubmitting }) => (\r\n                        <Form>\r\n                            {/* Step 1: Delivery Address */}\r\n                            \r\n                            <div className=\"checkout-step-wrapper  d-flex-ai-center\">\r\n                                <div className='step-icon'>1</div>\r\n                                <div className='checkout-step'>\r\n                                    <h4 className='checkout-step-label'>Delivery Address</h4>\r\n                                    <div className=\"form-row\">\r\n                                        {/* <h5>Delivery Address</h5> */}\r\n                                        <div className=\"form-group col-md-6\">\r\n                                            <label htmlFor=\"inputName\">{delivery.name}</label>\r\n                                            <Field type=\"text\" name=\"name\" className='form-control' id=\"inputName\" placeholder={placeholder.name} />\r\n                                            <ErrorMessage name=\"name\" component=\"div\" className='errorMessage'/>\r\n                                        </div>\r\n                                        <div className=\"form-group col-md-6\">\r\n                                            <label htmlFor=\"inputPhone\">{delivery.phone}</label>\r\n                                            {/* <PhoneInput\r\n                                            country=\"IN\"\r\n                                            placeholder=\"Enter phone number\"\r\n                                            value={value}\r\n                                            className=\"border border-danger\" \r\n                                            onChange={setValue}/> */}\r\n                                            <Field type=\"number\" name='phone' className=\"form-control\" id=\"inputPhone\" placeholder={placeholder.phone} />\r\n                                            <ErrorMessage name=\"phone\" component=\"div\" className='errorMessage'/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"inputAddress\">{delivery.house}</label>\r\n                                        <Field type=\"text\" name='house' className=\"form-control\" id=\"inputAddress\" placeholder={placeholder.house} />\r\n                                        <ErrorMessage name=\"house\" component=\"div\" className='errorMessage'/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"inputAddress2\">{delivery.area}</label>\r\n                                        <Field type=\"text\" name='area' className=\"form-control\" id=\"inputAddress2\" placeholder={placeholder.area} />\r\n                                        <ErrorMessage name=\"area\" component=\"div\" className='errorMessage'/>\r\n                                    </div>\r\n                                    <div className=\"form-row\">\r\n                                        <div className=\"form-group col-md-6\">\r\n                                            <label htmlFor=\"inputCity\">{delivery.city}</label>\r\n                                            <Field type=\"text\" name=\"city\" className=\"form-control\" id=\"inputCity\" placeholder={placeholder.city} />\r\n                                            <ErrorMessage name=\"city\" component=\"div\" className='errorMessage'/>\r\n\r\n                                        </div>\r\n                                        <div className=\"form-group col-md-6\">\r\n                                            <label htmlFor=\"inputState\">{delivery.state}</label>\r\n                                            <Field as='select' name='state' id=\"inputState\" className=\"form-control\">\r\n                                                <option selected>Select...</option>\r\n                                                {states.map(state=><option>{state}</option>)}\r\n                                            </Field>\r\n                                            <ErrorMessage name='state' component=\"div\" className='errorMessage'/>\r\n\r\n                                        </div>\r\n                                        <div className=\"form-group col-md-6\">\r\n                                            <label htmlFor=\"inputZip\">{delivery.pin}</label>\r\n                                            <Field type=\"number\" name='pin' className=\"form-control\" id=\"inputZip\" placeholder={placeholder.pin}/>\r\n                                            <ErrorMessage name='pin' component=\"div\" className='errorMessage'/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"form-check\">\r\n                                            <input className=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\"/>\r\n                                            <label className=\"form-check-label\" htmlFor=\"gridCheck\">\r\n                                                I accept and confirm the above details\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn btn-next\" disabled={isSubmitting}>Save & Next</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </Form>\r\n                    )}\r\n                    </Formik>\r\n                    \r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserCheckoutForm","import React from 'react'\r\nimport '../../../../assets/styles/user/Checkout.css';\r\nimport {RiBillLine} from 'react-icons/ri';\r\nimport {useSelector} from 'react-redux';\r\n\r\n\r\nconst BillSummary = () => {\r\n\r\n    const subTotal=useSelector(state=>state.cartSlice.totalAmount).toFixed(2);\r\n    const totalItems=useSelector(state=>state.cartSlice.products.length);\r\n    const gst=(0.18*subTotal).toFixed(2);\r\n    const shipCharge=subTotal<1000?100.00 : 0.00;\r\n    const total=(Number(subTotal)+Number(shipCharge)+Number(gst)).toFixed(2);\r\n\r\n    return (\r\n        <div className='col-lg-3 border-light'>\r\n            <div className='checkout-cart-container'>\r\n                <div className='summary'>\r\n                    <div className='summary-head'>\r\n                        <h4 className='summary-title'>\r\n                            Summary\r\n                            <RiBillLine style={{ float: 'right', fontSize: '1.5rem' }} />\r\n                        </h4>\r\n                        <p className='summary-text'>The total cost consist of the tax and shipping charge</p>\r\n                    </div>\r\n                    <div className='summary-details'>\r\n                        <p>Total items {totalItems} </p>\r\n                        <div className='summary-item'>\r\n                            <p className='sub-total'>\r\n                                <strong>\r\n                                    Sub Total\r\n                                <span className='sub-total-amt'>&#8377;{subTotal}</span>\r\n                                </strong>\r\n                            </p>\r\n                        </div>\r\n                        <div className='summary-item'>\r\n                            <p className='summary-charge'>\r\n                                Shipping\r\n                                <span className='summary-amt'>+&#8377;{shipCharge}</span>\r\n\r\n                            </p>\r\n                        </div>\r\n                        <div className='summary-item'>\r\n                            <p className='summary-charge'>\r\n                                GST\r\n                                <span className='summary-amt'>+&#8377;{gst}</span>\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div className='summary-item'>\r\n                            <p className='grand-total'>\r\n                                <strong>\r\n                                    Total\r\n                                <span className='grand-total-amt'>{total}</span>\r\n                                </strong>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <p className='have-an-discount text-primary'>Have an discount code</p>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BillSummary","import React from 'react'\r\nimport UserCheckoutForm from '../components/checkout/UserCheckoutForm';\r\nimport BillSummary from '../components/checkout/BillSummary';\r\nimport {shopForm,indiaState} from '../../../utils/constants/constant-data';\r\n\r\nconst Checkout = () => {\r\n  return (\r\n    <div className='col-lg-12'>\r\n            <h2 style={{padding:'1rem', textAlign:'center'}}>Checkout</h2>\r\n        <div className='row d-flex justify-content-center align-items-start checkout-container'>\r\n            <UserCheckoutForm states={indiaState} shopForm={shopForm}/>\r\n            <BillSummary />\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Checkout"],"names":["_ref","shopForm","states","delivery","placeholder","_useState","useState","_useState2","_slicedToArray","_jsx","_Fragment","children","className","Formik","initialValues","name","phone","house","area","city","state","pin","validate","values","errors","test","onSubmit","_ref2","setSubmitting","setTimeout","alert","JSON","stringify","_ref3","isSubmitting","Form","_jsxs","htmlFor","Field","type","id","ErrorMessage","component","as","selected","map","disabled","subTotal","useSelector","cartSlice","totalAmount","toFixed","totalItems","products","length","gst","shipCharge","total","Number","RiBillLine","style","float","fontSize","padding","textAlign","UserCheckoutForm","indiaState","BillSummary"],"sourceRoot":""}