{"version":3,"file":"static/js/314.0a7584dc.chunk.js","mappings":"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","sources":["features/products/presentation/pages/SearchResult.js"],"sourcesContent":["import React, { useState, useEffect} from 'react'\r\nimport { nanoid } from 'nanoid';\r\nimport {useLocation} from 'react-router-dom';\r\nimport Loader from '../../../../utils/widgets/Loader';\r\nimport PaginationNav from '../components/products/PaginationNav';\r\nimport ProductCard from '../components/products/ProductCard';\r\nimport FilterSection from '../components/products/FilterSection';\r\nimport { filterRatings } from '../../../../utils/constants/constant-data';\r\nimport { renderProducts, searchProducts } from '../../../../utils/services/reducer/filter/filter-slice';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getProductByQuery } from '../../../../utils/services/clientapis/api';\r\n\r\n\r\n\r\n const SearchResult = () => {\r\n  const queryString=new URLSearchParams(useLocation().search);\r\n  let query=queryString.get('q');  \r\n\r\n  // all states\r\n  const [productTypes,setProductTypes]=useState([]);\r\n  const[ratings,setRatings]=useState(filterRatings);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [productsPerPage] = useState(12);\r\n  const productState=useSelector(state=>state.filterSlice.products);\r\n  const loading=useSelector(state=>state.filterSlice.loading);\r\n  let dispatch=useDispatch();\r\n\r\n // to pagination of products\r\n const indexOfLastProds=productsPerPage*currentPage;\r\n const indexOfFirstProds=indexOfLastProds-productsPerPage;\r\n  const sliceProducts=productState.slice(indexOfFirstProds,indexOfLastProds);\r\n  \r\n  // render products on the page\r\n  const showProducts = () => {\r\n    return productState.length==0 ?\r\n    <div className='d-flex align-items-center m-auto' style={{minHeight:'80vh'}}> \r\n     <h4 className='ml-2'>No Products</h4> \r\n    </div>\r\n    :\r\n     sliceProducts.map((product) => <ProductCard index={nanoid()} item={product} /> )\r\n   }\r\n \r\n\r\n  // to change the pages\r\n  const paginate=(pageNum)=>{\r\n    setCurrentPage(pageNum);\r\n    window.scrollTo({ top: 0, left: 0, behavior: 'smooth' }); \r\n  };\r\n\r\n  // to handle rating checkboxes\r\n  const handleCheckbox=(id)=>{\r\n    let selectedTypes=productTypes.map(item=>item.id===id ? {...item,checked:!item.checked} : item)\r\n    setProductTypes(selectedTypes);\r\n  }\r\n\r\n  const handleRatings=(id)=>{\r\n    const selectedRating=ratings.map(item=>item.id===id?{...item,selected:!item.selected}:{...item,selected:false});\r\n    setRatings(selectedRating);\r\n  }\r\n\r\n  const handleFilters= async ()=>{\r\n    \r\n    const response=await getProductByQuery(query);\r\n    let updated=response.data;\r\n    let rated=ratings.filter(item=>item.selected).map(item=>item.value);\r\n    if(rated.length) {\r\n      updated=updated.filter(item=>item.rating.rate>=Math.trunc(rated[0]));\r\n    }\r\n    let checked=productTypes.filter(item=>item.checked).map(item=>item.value);\r\n    if(checked.length){\r\n        updated=updated.filter(item=>checked.includes(item.type));\r\n    }\r\n    dispatch(renderProducts(updated));\r\n\r\n  }\r\n\r\n  useEffect(async() => {\r\n    dispatch(searchProducts(query));\r\n   const response=await getProductByQuery(query);\r\n    const types=[...new Set(response.data.map(item=>item.type))];\r\n    setCurrentPage(1);\r\n    let prodTypes=[];\r\n    types.map((item,index)=>{\r\n        return prodTypes.push({\r\n            label:item,\r\n            value:item,\r\n            id:index+1,\r\n            checked:false\r\n        });\r\n        });\r\n      setProductTypes(prodTypes);\r\n   return ()=>{}\r\n\r\n  },[query]);\r\n\r\n\r\n\r\n  // to handle filters effects\r\n  useEffect(()=>{\r\n    handleFilters();\r\n   return ()=>{}\r\n\r\n  },[productTypes,ratings])\r\n\r\n\r\n    return loading? <Loader /> :\r\n      <>\r\n      <div className='col-xl-2 col-lg-3 col-md-12'>\r\n        <FilterSection \r\n        handleRatings={handleRatings} \r\n        handleTypes={handleCheckbox}\r\n        ratingLabels={ratings} \r\n        typesLabels={productTypes}\r\n        category={query}\r\n        handleProducts={getProductByQuery}\r\n        />\r\n\r\n      </div>\r\n\r\n      <div className='col-xl-8 col-lg-9 col-md-12'>\r\n        <div className='row'>\r\n          {showProducts()}\r\n        </div>\r\n        <div className='mt-5'>\r\n          {productState.length<=productsPerPage?\r\n              \"\"\r\n              :\r\n              <PaginationNav \r\n              currentPage={currentPage}\r\n              productsPerPage={productsPerPage}\r\n              paginate={paginate}\r\n              totalProducts={productState.length}\r\n              />\r\n              }\r\n          </div>\r\n      </div>\r\n    </>\r\n}\r\n\r\nexport default SearchResult;\r\n"],"names":["_ref","query","URLSearchParams","useLocation","search","get","_useState","useState","_useState2","_slicedToArray","productTypes","setProductTypes","_useState3","filterRatings","_useState4","ratings","setRatings","_useState5","_useState6","currentPage","setCurrentPage","_useState7","productsPerPage","productState","useSelector","state","filterSlice","products","loading","dispatch","useDispatch","indexOfLastProds","indexOfFirstProds","sliceProducts","slice","useEffect","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","response","types","prodTypes","wrap","_context2","prev","next","searchProducts","getProductByQuery","sent","_toConsumableArray","Set","data","map","item","type","index","push","label","value","id","checked","abrupt","stop","_callee","updated","rated","_context","filter","selected","length","rating","rate","Math","trunc","includes","renderProducts","apply","arguments","handleFilters","_jsx","Loader","_jsxs","_Fragment","children","className","FilterSection","handleRatings","selectedRating","_objectSpread","handleTypes","selectedTypes","ratingLabels","typesLabels","category","handleProducts","style","minHeight","product","ProductCard","nanoid","PaginationNav","paginate","pageNum","window","scrollTo","top","left","behavior","totalProducts"],"sourceRoot":""}