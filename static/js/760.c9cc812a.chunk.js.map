{"version":3,"file":"static/js/760.c9cc812a.chunk.js","mappings":"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","sources":["pages/SignIn.js","utils/validation/validation-schema.js","webpack://eStore/./src/assets/styles/user/Login.module.css?a812"],"sourcesContent":["import React,{useState} from 'react';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport {signIn} from '../utils/constants/constant-data';\r\nimport {AiFillGoogleCircle} from 'react-icons/ai';\r\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\r\nimport {app} from '../utils/services/auth/firebaseConfig';\r\nimport login from '../assets/styles/user/Login.module.css';\r\nimport {CONSTANTS} from '../utils/constants/routesdata';\r\nimport { useFormik } from 'formik';\r\nimport {signInSchema} from '../utils/validation/validation-schema';\r\n\r\n\r\nexport default function SignIn() {\r\n  const[showPwd,setShowPwd]=useState(false);\r\n  const navigate=useNavigate();\r\n  let fieldValid=true;\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password:''\r\n    },\r\n    validationSchema:signInSchema,\r\n    onSubmit: values => {\r\n      alert(JSON.stringify(values, null, 2));\r\n    },\r\n  });\r\n  \r\n  const showPassword=(event)=>{\r\n   setShowPwd((val)=>val=!val) \r\n  }\r\n\r\n  const signInWithGoogle=()=>{\r\n      const provider = new GoogleAuthProvider();\r\n      provider.addScope('https://www.googleapis.com/auth/contacts.readonly');\r\n    // Initialize Firebase Authentication and get a reference to the service\r\n      const auth = getAuth(app);\r\n      signInWithPopup(auth, provider)\r\n          .then((result) => {\r\n              // This gives you a Google Access Token. You can use it to access the Google API.\r\n              const credential = GoogleAuthProvider.credentialFromResult(result);\r\n              const token = credential.accessToken;\r\n              // The signed-in user info.\r\n              const user = result.user;\r\n              localStorage.setItem('authUser',JSON.stringify({\r\n                username:user.displayName,\r\n                token:token\r\n              }))\r\n              navigate('/');\r\n              // ...\r\n          }).catch((error) => {\r\n              // Handle Errors here.\r\n              const errorCode = error.code;\r\n              const errorMessage = error.message;\r\n              // The email of the user's account used.\r\n              const email = error.customData.email;\r\n              // The AuthCredential type that was used.\r\n              const credential = GoogleAuthProvider.credentialFromError(error);\r\n              // ...\r\n          });\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className={login.loginCard}>\r\n    <div className={login.loginFrame}>\r\n        <h3 className={login.loginTitle}>{signIn.heading}</h3>\r\n        <button className={login.signupBtn} id={login.signup} onClick={signInWithGoogle}>\r\n            <AiFillGoogleCircle className={login.google}/>\r\n            Continue with Google\r\n        </button>\r\n        <div className={login.loginContainer}>\r\n        <form onSubmit={formik.handleSubmit} validate={formik.validationSchema}>\r\n              {/* Email label */}\r\n            {/* <label className={login.mainLabel}>{signIn.usernameLabel}</label> */}\r\n            <input type=\"email\" name=\"email\" placeholder={signIn.namePlaceholder} \r\n            onChange={formik.handleChange}\r\n            value={formik.values.email}\r\n            className={fieldValid===false ? `{login.errorBorder}`: ''} />\r\n            <div className={login.errorField}>\r\n              {formik.errors.email ? <p className={`text-danger ${login.error}`}>{formik.errors.email}</p>: \"\"}\r\n            </div>\r\n\r\n            {/* Password label */}\r\n            {/* <label className={login.mainLabel}>{signIn.passwordLabel}</label> */}\r\n            <input type={showPwd ? \"text\":\"password\" }name=\"password\" className='mt-3' \r\n            onChange={formik.handleChange}\r\n            value={formik.values.password}\r\n             placeholder={signIn.psdPlaceholder} />\r\n            <div className={login.errorField}>\r\n              {formik.errors.email ? <p className={`text-danger fs-2 ${login.error}`}>{formik.errors.password}</p>: \"\"}\r\n            </div>\r\n              <input type=\"checkbox\" onChange={showPassword} name=\"show-password\" className='mt-3'/> Show password\r\n              \r\n              {/* Submit Button */}\r\n            <button className={login.loginBtn} id={login.login} type='submit'>Sign in</button>\r\n            \r\n            </form>\r\n\r\n            <label className={login.helpBlock}>\r\n                <input type=\"checkbox\" name=\"keep-login\"/>\r\n                <span className={login.keepsignin}>Keep me signed in</span>\r\n            </label>\r\n            <label className={login.helpBlock}>\r\n                <NavLink to='#' className={login.forgot}>Forgot your Password?</NavLink>\r\n            </label>\r\n        <div>\r\n            <span className={login.message}>Don't have an account?</span> \r\n            <NavLink to={CONSTANTS.SIGNUP} className={login.signup}>\r\n            <button className={login.signupBtn} id={login.signup}>\r\n              Sign up\r\n            </button>\r\n            </NavLink>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n</>\r\n  )\r\n}\r\n","import * as yup from 'yup';\r\n\r\nexport const signUpSchema = yup.object({\r\n    name: yup\r\n      .string('Enter your full name')\r\n      .min(3, 'Name should be of minimum 3 characters')\r\n      .max(20, 'Name should be of maximum 20 characters')\r\n      .matches(/^[a-zA-Z]+\\s|[a-zA-Z]/)\r\n      .required('Name is required'),\r\n    phone: yup\r\n      .string('Enter your phone')\r\n      .min('10', 'Phone no. must be atleast 10 digit')\r\n      .max(14, 'Phone no. must be not more than 14 digit')\r\n      .matches(/^[0-9]{10,14}/)\r\n      .required('Phone is required'),\r\n    email: yup\r\n      .string('Enter your email')\r\n      .email('Enter a valid email')\r\n      .required('Email is required'),\r\n    password: yup\r\n      .string('Enter your password')\r\n      .min(8, 'Password should be of atleast 8 characters')\r\n      .required('Password is required'),\r\n    confirmPassword: yup.mixed()\r\n     .oneOf([yup.ref('password'), null], 'Passwords not match')\r\n  });\r\n\r\n  export const signInSchema=yup.object({\r\n    email: yup\r\n      .string('Enter your email')\r\n      .email('Enter a valid email')\r\n      .required('Email is required'),\r\n    password: yup\r\n      .string('Enter your password')\r\n      .min(8, 'Password should be of minimum 8 characters')\r\n      .required('Password is required'),\r\n  });","// extracted by mini-css-extract-plugin\nexport default {\"loginCard\":\"Login_loginCard__oD7yt\",\"loginFrame\":\"Login_loginFrame__8udZg\",\"loginTitle\":\"Login_loginTitle__ccGas\",\"loginContainer\":\"Login_loginContainer__NtZ7b\",\"boundary\":\"Login_boundary__YM0XW\",\"mainLabel\":\"Login_mainLabel__HTewh\",\"loginBtn\":\"Login_loginBtn__fzUnA\",\"signupBtn\":\"Login_signupBtn__OEY-k\",\"loginOther\":\"Login_loginOther__Pnrjd\",\"errorField\":\"Login_errorField__kJ07c\",\"error\":\"Login_error__6BkET\",\"errorBorder\":\"Login_errorBorder__shxwL\",\"google\":\"Login_google__21gpC\",\"helpBlock\":\"Login_helpBlock__sFpoI\",\"keepsignin\":\"Login_keepsignin__N9Z+l\",\"forgot\":\"Login_forgot__xMdLb\",\"message\":\"Login_message__+zLdF\",\"signup\":\"Login_signup__2IQQ5\",\"load\":\"Login_load__LSYaK\",\"loader\":\"Login_loader__nf3oi\",\"spin\":\"Login_spin__R3eDF\"};"],"names":["SignIn","_useState","useState","_useState2","_slicedToArray","showPwd","setShowPwd","navigate","useNavigate","formik","useFormik","initialValues","email","password","validationSchema","signInSchema","onSubmit","values","alert","JSON","stringify","_jsx","_Fragment","children","className","login","loginCard","_jsxs","loginFrame","loginTitle","signIn","heading","signupBtn","id","signup","onClick","provider","GoogleAuthProvider","addScope","auth","getAuth","app","signInWithPopup","then","result","token","credentialFromResult","accessToken","user","localStorage","setItem","username","displayName","catch","error","code","message","customData","credentialFromError","AiFillGoogleCircle","google","loginContainer","handleSubmit","validate","type","name","placeholder","namePlaceholder","onChange","handleChange","value","errorField","errors","concat","psdPlaceholder","event","val","loginBtn","helpBlock","keepsignin","NavLink","to","forgot","CONSTANTS","SIGNUP","signUpSchema","yup","min","max","matches","required","phone","confirmPassword","oneOf"],"sourceRoot":""}